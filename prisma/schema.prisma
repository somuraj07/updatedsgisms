// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  password   String
  name       String
  department String
  gender     String
  type       String
  role       Role     @default(STUDENT)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  complaintsAsStudent Complaint[]
  attendenceAsStudent Attendence[]
  hostelAsStudent     Hostel[]
}

model Complaint {
  id        String   @id @default(cuid())
  photo     String
  reason    String
  createdAt DateTime @default(now())

  // Student info
  studentId String
  student   User   @relation(fields: [studentId], references: [id])
}

model Attendence {
  id           String @id @default(cuid())
  monthh       String
  percentage   String
  attendenceId String
  attendence   User   @relation(fields: [attendenceId], references: [id])
}

model Timetabel {
  id         Int      @id @default(autoincrement())
  department String
  year       String
  semsister  String
  period     String
  createdAt  DateTime @default(now())

  @@unique([department, year, semsister])
}

model Hostel {
  id          Int      @id @default(autoincrement())
  reason      String
  village     String
  number      String
  photo       String
  duration    String
  submit      Boolean  @default(false)
  returned    Boolean  @default(false)
  comeoutTime DateTime @default(now())
  comeinTime  DateTime @default(now())
  hostelId    String
  hostel      User     @relation(fields: [hostelId], references: [id])
}

enum Role {
  STUDENT
  ADMIN
  WARDEN
  WATCHMAN
  SUPER
}
